services:
  postgres:
    image: postgres:15-alpine
    container_name: calculator_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-calculator_db}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - calculator_net

  orchestrator:
    container_name: calculator_orchestrator
    build:
      context: .
      dockerfile: cmd/orchestrator/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy 
    environment:
      APP_ENV: ${APP_ENV:-development}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      GRACEFUL_TIMEOUT: ${GRACEFUL_TIMEOUT:-5s}
      POSTGRES_DSN: "postgres://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-calculator_db}?sslmode=disable"
      DB_POOL_MAX_CONNS: ${DB_POOL_MAX_CONNS:-10}
      ORCHESTRATOR_GRPC_PORT: ${ORCHESTRATOR_GRPC_PORT:-50051}
      WORKER_GRPC_ADDRESS: ${WORKER_GRPC_ADDRESS:-worker:50052}
      GRPC_CLIENT_TIMEOUT: ${GRPC_CLIENT_TIMEOUT:-5s}
    networks:
      - calculator_net

  worker:
    container_name: calculator_worker
    build:
      context: .
      dockerfile: cmd/worker/Dockerfile
    environment:
      APP_ENV: ${APP_ENV:-development}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      GRACEFUL_TIMEOUT: ${GRACEFUL_TIMEOUT:-5s}
      WORKER_GRPC_PORT: ${WORKER_GRPC_PORT:-50052}
      TIME_ADDITION_MS: ${TIME_ADDITION_MS:-200ms}
      TIME_SUBTRACTION_MS: ${TIME_SUBTRACTION_MS:-200ms}
      TIME_MULTIPLICATION_MS: ${TIME_MULTIPLICATION_MS:-300ms}
      TIME_DIVISION_MS: ${TIME_DIVISION_MS:-400ms}
      TIME_EXPONENTIATION_MS: ${TIME_EXPONENTIATION_MS:-500ms}
    networks:
      - calculator_net

  agent:
    container_name: calculator_agent
    build:
      context: .
      dockerfile: cmd/agent/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      orchestrator:
         condition: service_started
      worker: 
         condition: service_started
    ports:
      - "${AGENT_HTTP_PORT:-8080}:8080"
    environment:
      APP_ENV: ${APP_ENV:-development}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      GRACEFUL_TIMEOUT: ${GRACEFUL_TIMEOUT:-5s}
      POSTGRES_DSN: "postgres://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-calculator_db}?sslmode=disable"
      DB_POOL_MAX_CONNS: ${DB_POOL_MAX_CONNS:-10}
      JWT_SECRET: ${JWT_SECRET:-your_very_secret_key_change_me}
      JWT_TOKEN_TTL: ${JWT_TOKEN_TTL:-1h}
      ORCHESTRATOR_GRPC_ADDRESS: ${ORCHESTRATOR_GRPC_ADDRESS:-orchestrator:50051} 
      GRPC_CLIENT_TIMEOUT: ${GRPC_CLIENT_TIMEOUT:-5s}
    networks:
      - calculator_net

volumes:
  postgres_data:

networks:
  calculator_net:
    driver: bridge