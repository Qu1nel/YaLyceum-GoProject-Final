// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/orchestrator.proto

package orchestrator_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на вычисление
type ExpressionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID пользователя из JWT
	Expression    string                 `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`       // Математическое выражение
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpressionRequest) Reset() {
	*x = ExpressionRequest{}
	mi := &file_proto_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpressionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionRequest) ProtoMessage() {}

func (x *ExpressionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionRequest.ProtoReflect.Descriptor instead.
func (*ExpressionRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *ExpressionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExpressionRequest) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

// Ответ с ID созданной задачи
type ExpressionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // UUID созданной задачи
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpressionResponse) Reset() {
	*x = ExpressionResponse{}
	mi := &file_proto_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpressionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressionResponse) ProtoMessage() {}

func (x *ExpressionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressionResponse.ProtoReflect.Descriptor instead.
func (*ExpressionResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *ExpressionResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Запрос деталей задачи
type TaskDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID пользователя (для проверки прав)
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"` // ID запрашиваемой задачи
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskDetailsRequest) Reset() {
	*x = TaskDetailsRequest{}
	mi := &file_proto_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDetailsRequest) ProtoMessage() {}

func (x *TaskDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDetailsRequest.ProtoReflect.Descriptor instead.
func (*TaskDetailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *TaskDetailsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TaskDetailsRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// Детали задачи (статус, результат/ошибка)
type TaskDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Expression    string                 `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                 // "pending", "processing", "completed", "failed"
	Result        float64                `protobuf:"fixed64,4,opt,name=result,proto3" json:"result,omitempty"`                               // Результат, если статус "completed"
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Сообщение об ошибке, если статус "failed"
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`          // Время создания (RFC3339)
	UpdatedAt     string                 `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`          // Время последнего обновления (RFC3339)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskDetailsResponse) Reset() {
	*x = TaskDetailsResponse{}
	mi := &file_proto_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDetailsResponse) ProtoMessage() {}

func (x *TaskDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDetailsResponse.ProtoReflect.Descriptor instead.
func (*TaskDetailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *TaskDetailsResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskDetailsResponse) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *TaskDetailsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskDetailsResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *TaskDetailsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskDetailsResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TaskDetailsResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Запрос списка задач пользователя
type UserTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID пользователя, чьи задачи нужно получить
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserTasksRequest) Reset() {
	*x = UserTasksRequest{}
	mi := &file_proto_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTasksRequest) ProtoMessage() {}

func (x *UserTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTasksRequest.ProtoReflect.Descriptor instead.
func (*UserTasksRequest) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *UserTasksRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Ответ со списком задач пользователя
type UserTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*TaskBrief           `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"` // Повторяющееся поле для списка задач
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserTasksResponse) Reset() {
	*x = UserTasksResponse{}
	mi := &file_proto_orchestrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTasksResponse) ProtoMessage() {}

func (x *UserTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTasksResponse.ProtoReflect.Descriptor instead.
func (*UserTasksResponse) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *UserTasksResponse) GetTasks() []*TaskBrief {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// Краткая информация о задаче для списка
type TaskBrief struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Expression    string                 `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // RFC3339
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskBrief) Reset() {
	*x = TaskBrief{}
	mi := &file_proto_orchestrator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskBrief) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskBrief) ProtoMessage() {}

func (x *TaskBrief) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orchestrator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskBrief.ProtoReflect.Descriptor instead.
func (*TaskBrief) Descriptor() ([]byte, []int) {
	return file_proto_orchestrator_proto_rawDescGZIP(), []int{6}
}

func (x *TaskBrief) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskBrief) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *TaskBrief) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TaskBrief) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

var File_proto_orchestrator_proto protoreflect.FileDescriptor

const file_proto_orchestrator_proto_rawDesc = "" +
	"\n" +
	"\x18proto/orchestrator.proto\x12\forchestrator\"L\n" +
	"\x11ExpressionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1e\n" +
	"\n" +
	"expression\x18\x02 \x01(\tR\n" +
	"expression\"-\n" +
	"\x12ExpressionResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"F\n" +
	"\x12TaskDetailsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\"\xd8\x01\n" +
	"\x13TaskDetailsResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1e\n" +
	"\n" +
	"expression\x18\x02 \x01(\tR\n" +
	"expression\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x16\n" +
	"\x06result\x18\x04 \x01(\x01R\x06result\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\tR\tupdatedAt\"+\n" +
	"\x10UserTasksRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"B\n" +
	"\x11UserTasksResponse\x12-\n" +
	"\x05tasks\x18\x01 \x03(\v2\x17.orchestrator.TaskBriefR\x05tasks\"r\n" +
	"\tTaskBrief\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1e\n" +
	"\n" +
	"expression\x18\x02 \x01(\tR\n" +
	"expression\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt2\x95\x02\n" +
	"\x13OrchestratorService\x12U\n" +
	"\x10SubmitExpression\x12\x1f.orchestrator.ExpressionRequest\x1a .orchestrator.ExpressionResponse\x12U\n" +
	"\x0eGetTaskDetails\x12 .orchestrator.TaskDetailsRequest\x1a!.orchestrator.TaskDetailsResponse\x12P\n" +
	"\rListUserTasks\x12\x1e.orchestrator.UserTasksRequest\x1a\x1f.orchestrator.UserTasksResponseB&Z$./gen/orchestrator;orchestrator_grpcb\x06proto3"

var (
	file_proto_orchestrator_proto_rawDescOnce sync.Once
	file_proto_orchestrator_proto_rawDescData []byte
)

func file_proto_orchestrator_proto_rawDescGZIP() []byte {
	file_proto_orchestrator_proto_rawDescOnce.Do(func() {
		file_proto_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_orchestrator_proto_rawDesc), len(file_proto_orchestrator_proto_rawDesc)))
	})
	return file_proto_orchestrator_proto_rawDescData
}

var file_proto_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_orchestrator_proto_goTypes = []any{
	(*ExpressionRequest)(nil),   // 0: orchestrator.ExpressionRequest
	(*ExpressionResponse)(nil),  // 1: orchestrator.ExpressionResponse
	(*TaskDetailsRequest)(nil),  // 2: orchestrator.TaskDetailsRequest
	(*TaskDetailsResponse)(nil), // 3: orchestrator.TaskDetailsResponse
	(*UserTasksRequest)(nil),    // 4: orchestrator.UserTasksRequest
	(*UserTasksResponse)(nil),   // 5: orchestrator.UserTasksResponse
	(*TaskBrief)(nil),           // 6: orchestrator.TaskBrief
}
var file_proto_orchestrator_proto_depIdxs = []int32{
	6, // 0: orchestrator.UserTasksResponse.tasks:type_name -> orchestrator.TaskBrief
	0, // 1: orchestrator.OrchestratorService.SubmitExpression:input_type -> orchestrator.ExpressionRequest
	2, // 2: orchestrator.OrchestratorService.GetTaskDetails:input_type -> orchestrator.TaskDetailsRequest
	4, // 3: orchestrator.OrchestratorService.ListUserTasks:input_type -> orchestrator.UserTasksRequest
	1, // 4: orchestrator.OrchestratorService.SubmitExpression:output_type -> orchestrator.ExpressionResponse
	3, // 5: orchestrator.OrchestratorService.GetTaskDetails:output_type -> orchestrator.TaskDetailsResponse
	5, // 6: orchestrator.OrchestratorService.ListUserTasks:output_type -> orchestrator.UserTasksResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_orchestrator_proto_init() }
func file_proto_orchestrator_proto_init() {
	if File_proto_orchestrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_orchestrator_proto_rawDesc), len(file_proto_orchestrator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_orchestrator_proto_goTypes,
		DependencyIndexes: file_proto_orchestrator_proto_depIdxs,
		MessageInfos:      file_proto_orchestrator_proto_msgTypes,
	}.Build()
	File_proto_orchestrator_proto = out.File
	file_proto_orchestrator_proto_goTypes = nil
	file_proto_orchestrator_proto_depIdxs = nil
}
