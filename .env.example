# =========================================
# ОБЩИЕ НАСТРОЙКИ ДЛЯ ВСЕХ GO-СЕРВИСОВ
# =========================================
APP_ENV=development       # Окружение приложения: "development", "production", или "test" (устанавливается автоматически для интеграционных тестов)
LOG_LEVEL=debug           # Уровень логирования: "debug", "info", "warn", "error"
GRACEFUL_TIMEOUT=5s       # Таймаут на корректное завершение работы сервисов (например, "5s", "1m")

# =========================================
# БАЗА ДАННЫХ POSTGRESQL
# (Используется Agent и Orchestrator)
# =========================================
POSTGRES_USER=user
POSTGRES_PASSWORD=password
POSTGRES_DB=calculator_db
POSTGRES_PORT=5432        # Внешний порт, на котором PostgreSQL будет доступен на хост-машине

# POSTGRES_DSN формируется автоматически в docker-compose.yml и в тестовом окружении,
# но может быть переопределен здесь для локального запуска сервисов без Docker.
# Пример: POSTGRES_DSN=postgres://user:password@localhost:5432/calculator_db?sslmode=disable
DB_POOL_MAX_CONNS=10      # Максимальное количество соединений в пуле для каждого сервиса

# =========================================
# AGENT SERVICE (HTTP API, Аутентификация)
# =========================================
AGENT_HTTP_PORT=8080      # Порт, на котором Agent сервис слушает HTTP запросы

# Настройки JWT для Agent
JWT_SECRET="замени_меня_на_очень_длинный_и_надежный_секретный_ключ_не_менее_32_символов" # ВАЖНО: Замените этот ключ!
JWT_TOKEN_TTL=1h          # Время жизни JWT токена (например, "15m", "1h", "24h")

# Настройки gRPC клиента в Agent (для подключения к Оркестратору)
ORCHESTRATOR_GRPC_ADDRESS=orchestrator:50051 # Адрес Оркестратора (имя сервиса и порт в Docker сети)
GRPC_CLIENT_TIMEOUT=5s                       # Общий таймаут для gRPC вызовов из Agent

# =========================================
# ORCHESTRATOR SERVICE (gRPC, Управление задачами)
# =========================================
ORCHESTRATOR_GRPC_PORT=50051 # Порт, на котором Оркестратор слушает gRPC запросы

# Настройки gRPC клиента в Orchestrator (для подключения к Воркерам)
WORKER_GRPC_ADDRESS=worker:50052 # Адрес Воркера (имя сервиса и порт в Docker сети)
# GRPC_CLIENT_TIMEOUT используется общий (см. выше)

# =========================================
# WORKER SERVICE (gRPC, Вычисления)
# =========================================
WORKER_GRPC_PORT=50052      # Порт, на котором Воркер слушает gRPC запросы

# Имитация времени выполнения операций на Воркере
TIME_ADDITION_MS=200ms
TIME_SUBTRACTION_MS=200ms
TIME_MULTIPLICATION_MS=300ms
TIME_DIVISION_MS=400ms
TIME_EXPONENTIATION_MS=500ms

# =========================================
# FRONTEND SERVICE (Nginx)
# =========================================
FRONTEND_PORT=80            # Порт, на котором Nginx раздает фронтенд