{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Этот сервис является точкой входа для пользователей Калькулятора Выражений. Он отвечает за аутентификацию, авторизацию и прием задач на вычисление, которые затем передаются в Оркестратор.",
        "title": "API Агента для Калькулятора Выражений",
        "contact": {
            "name": "Ivan Kovach (Qu1nel)",
            "url": "https://github.com/Qu1nel",
            "email": "covach.qn@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://github.com/Qu1nel/YaLyceum-GoProject-Final/blob/main/LICENSE"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/calculate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Принимает арифметическое выражение от аутентифицированного пользователя, создает задачу и ставит ее в очередь на асинхронное вычисление.\nВ случае успеха возвращает ID созданной задачи. Статус задачи изначально будет \"pending\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Задачи"
                ],
                "summary": "Отправить выражение на вычисление",
                "parameters": [
                    {
                        "description": "Объект с математическим выражением",
                        "name": "тело_запроса",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CalculateRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Запрос успешно принят, задача поставлена в очередь. Возвращается ID задачи.",
                        "schema": {
                            "$ref": "#/definitions/handler.CalculateResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации: неверный формат запроса, пустое или некорректное выражение.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Ошибка аутентификации: JWT токен отсутствует, невалиден или истек.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера при создании задачи или взаимодействии с другими сервисами.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Аутентифицирует пользователя по логину и паролю и возвращает JWT токен доступа.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Вход пользователя в систему",
                "parameters": [
                    {
                        "description": "Логин и пароль пользователя для входа",
                        "name": "учетные_данные",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT токен для доступа к защищенным эндпоинтам",
                        "schema": {
                            "$ref": "#/definitions/handler.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Ошибка аутентификации: неверный логин или пароль.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера при попытке входа.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Создает новый аккаунт пользователя с указанными логином и паролем.\nПароль будет сохранен в хешированном виде (bcrypt).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Логин и пароль пользователя для регистрации",
                        "name": "данные_регистрации",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сообщение об успешной регистрации (например, {\\\"message\\\":\\\"Пользователь успешно зарегистрирован\\\"})",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации: неверный формат логина или пароля, или неверное тело запроса.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Конфликт: пользователь с таким логином уже существует.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера при попытке регистрации.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех задач (с краткой информацией), созданных текущим аутентифицированным пользователем.\nЗадачи отсортированы по времени создания (сначала новые). Пагинация пока не реализована.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Задачи"
                ],
                "summary": "Получить список задач пользователя",
                "responses": {
                    "200": {
                        "description": "Массив объектов с краткой информацией о задачах.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.TaskListItem"
                            }
                        }
                    },
                    "401": {
                        "description": "Ошибка аутентификации: JWT токен отсутствует, невалиден или истек.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера при получении списка задач.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает полную информацию о задаче по её ID, если она принадлежит текущему аутентифицированному пользователю.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Задачи"
                ],
                "summary": "Получить детали конкретной задачи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID Задачи (в формате UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Объект с полной информацией о задаче.",
                        "schema": {
                            "$ref": "#/definitions/service.TaskDetails"
                        }
                    },
                    "400": {
                        "description": "Невалидный формат ID задачи (не UUID).",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Ошибка аутентификации: JWT токен отсутствует, невалиден или истек.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Задача с указанным ID не найдена или не принадлежит текущему пользователю.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера при получении деталей задачи.",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CalculateRequest": {
            "type": "object",
            "required": [
                "expression"
            ],
            "properties": {
                "expression": {
                    "description": "Математическое выражение для вычисления",
                    "type": "string",
                    "example": "(2+2)*4"
                }
            }
        },
        "handler.CalculateResponse": {
            "type": "object",
            "properties": {
                "task_id": {
                    "description": "Уникальный идентификатор созданной задачи",
                    "type": "string",
                    "example": "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "Текстовое описание ошибки",
                    "type": "string",
                    "example": "Сообщение об ошибке"
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string",
                    "example": "user123"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "handler.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "JWT токен доступа",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2..."
                }
            }
        },
        "handler.RegisterRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "description": "Логин пользователя, от 3 до 30 символов (буквы, цифры, '_')",
                    "type": "string",
                    "example": "newuser123"
                },
                "password": {
                    "description": "Пароль пользователя, минимум 6 символов",
                    "type": "string",
                    "example": "P@$$wOrd123"
                }
            }
        },
        "service.TaskDetails": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "result": {
                    "description": "omitempty, если nil",
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "service.TaskListItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "JWT токен авторизации. Формат: \"Bearer \u003cтокен\u003e\"\nПример: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}